name: Build Project Backend

on:
  push:
    branches: ["backend/development", "backend/master"]
  pull_request:
    branches: ["backend/development", "backend/master"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      # - name: Retrieve Docker login credentials
      #   run: echo "${{ secrets.DOCKER_CREDENTIALS }}" > docker-credentials.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # - name: Login to Docker
      #   run: docker login -u "$(cat docker-credentials.txt | jq -r '.username')" -p "$(cat docker-credentials.txt | jq -r '.password')"

      # - name: Build Docker Image
      #   run: docker build -t stellar-drive .

      # - name: change image tag
      #   run: docker tag $(docker images -q stellar-drive) cloudcw/stellar-drive:2.3

      # - name: Push Docker image to Docker Hub
      #   run: docker push cloudcw/stellar-drive:2.3
